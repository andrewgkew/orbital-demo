import com.example.category.AccountCategory
import com.example.common.BadRequestError
import com.example.common.InternalServerError
import com.example.common.PII

namespace com.example.account

model Secret

type ValidCategory by (AccountCategory) -> AccountCategory == "S1234"

policy EnforceAccess against Secret (category: AccountCategory) ->  {
  read {
    when {
      category == null -> throw((BadRequestError)  { message: "Category not found" })
      ValidCategory -> Secret
      AccountErrors.hasEnumNamed(category) -> throw((BadRequestError)
      {
         message: AccountErrors.enumForName(category).message
      })
      else -> throw((InternalServerError)  {
         message: AccountErrors.enumForName('DEFAULT').message
      })
    }
  }
}

policy EnforcePCI against PII (type: AccountType) -> {
    read {
        when {
            type == "personal" -> PII
            else -> "***"
        }
    }
}
