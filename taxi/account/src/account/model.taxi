import com.orbitalhq.mongo.Collection
import com.orbitalhq.kafka.KafkaMessageMetadata
import com.orbitalhq.kafka.KafkaMetadataType

import com.example.customer.CustomerId
import com.example.customer.Title
import com.example.customer.FirstName
import com.example.customer.Surname

namespace com.example.account

model KafkaAccount {
  id : AccountId
  type : AccountType
  customerId: CustomerId

  @KafkaMessageMetadata(KafkaMetadataType.Topic)
  topic : KafkaTopic

  @KafkaMessageMetadata(KafkaMetadataType.Offset)
  offset : KafkaOffset

  @KafkaMessageMetadata(KafkaMetadataType.Partition)
  partition : KafkaPartition
}

@Collection(connection = "mongo", collection = "accounts")
closed parameter model Account inherits MongoAudit {
    @Id
    id : AccountId
    type : AccountType
    customerId : CustomerId

    _topicPartitionOffset : AccountTopicPartitionOffset
}

model MongoAudit {
    @SetOnInsert
    _inserted: InsertedTimeStamp inherits Instant = now()
    _updated: UpdatedTimeStamp inherits Instant = now()
}

@Collection(connection = "mongo", collection = "accounts")
closed parameter model AccountRead inherits Secret {
    @Id
    id : AccountId
    type : AccountType
    customerId : CustomerId
}

model CustomerAccount {
  accountId: AccountId
  accountType: AccountType
  subType: AccountSubType
  category: AccountCategory
  name: Name inherits String = concat(Title,' ',FirstName,' ',Surname)
}
